{"version":3,"file":"static/js/757.d80a40af.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { registerThunk } from 'redux/auth/operations';\n\nimport {\n  ButtonSign,\n  Err,\n  Line,\n  PasswordMessage,\n  PasswordToggle,\n  Spn,\n  StyledInput,\n  StyledPasswordInput,\n  WrapBt,\n  WrapInPass,\n  WrapInp,\n  WrapPassword,\n} from './RegisterForm.styled';\nimport { ReactComponent as ShowsIco } from '../../images/home/eye.svg';\nimport { ReactComponent as HideIco } from '../../images/home/eye-off.svg';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    formState: { errors: formErrors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(registerThunk(data))\n      .unwrap()\n      .catch(error => {\n        toast.error('Invalid email or email already exists in the database');\n      });\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const [password, setPassword] = useState('');\n  const isPasswordValid = () => {\n    return password.length >= 6 && !formErrors.password;\n  };\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    setValue('password', newPassword);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <WrapInp>\n        <div>\n          <StyledInput\n            {...register('name', {\n              required: 'Please provide your name',\n              minLength: {\n                value: 3,\n                message: 'Please enter a name with at least 3 characters',\n              },\n            })}\n            type=\"text\"\n            placeholder=\"Name\"\n            autoComplete=\"new-name\"\n          />\n          {formErrors.name && <Err>{formErrors.name.message}</Err>}\n        </div>\n        <div>\n          <StyledInput\n            defaultValue=\"\"\n            {...register('email', {\n              required: 'Please provide your email',\n              minLength: {\n                value: 3,\n                message: 'Ensure your email is at least 3 characters long',\n              },\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"new-email\"\n          />\n          {formErrors.email && <Err>{formErrors.email.message}</Err>}\n        </div>\n        <WrapPassword>\n          <WrapInPass>\n            <StyledPasswordInput\n              {...register('password', {\n                required: 'Enter a valid Password',\n                minLength: {\n                  value: 6,\n                  message:\n                    'Make sure your password is at least 6 characters long',\n                },\n              })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              autoComplete=\"new-password\"\n              // hasError={!!formErrors.password}\n\n              onChange={handlePasswordChange}\n              className={`${\n                password.length === 0\n                  ? 'empty'\n                  : isPasswordValid()\n                  ? 'valid'\n                  : 'invalid'\n              }`}\n            />\n            <PasswordToggle onClick={togglePasswordVisibility} type=\"button\">\n              {showPassword ? <HideIco /> : <ShowsIco />}\n            </PasswordToggle>\n          </WrapInPass>\n          {formErrors.password && password.length === 0 && (\n            <Err>{formErrors.password.message}</Err>\n          )}\n\n          {password.length > 0 && (\n            <PasswordMessage $isGood={password.length >= 6}>\n              {password.length >= 6 ? 'Good password' : 'Short password'}\n            </PasswordMessage>\n          )}\n        </WrapPassword>\n        <WrapBt>\n          <ButtonSign>Sign up</ButtonSign>\n        </WrapBt>\n\n        <Line>\n          <p>Have an account already? </p>\n          <Link to={'/login'}>\n            {' '}\n            <Spn>Log in now</Spn>\n          </Link>\n        </Line>\n      </WrapInp>\n    </form>\n  );\n};\nexport default RegisterForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { TotalIncome } from 'shared/Total';\n\nimport { AdaptDiv, H2 } from 'pages/Home/Home.styled';\nimport {\n  PlugDivs,\n  TableDivs,\n  Texts,\n  WrapForm,\n  WrapperS,\n} from './Register.styled';\nimport { ImgAuth } from 'components/RegisterForm/RegisterForm.styled';\n\nimport homeimg from '../../images/home/Rectangle 1x.png';\nimport { Navigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { selectUser } from 'redux/user/selectors';\n\nexport default function Register() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const { name } = useSelector(selectUser);\n\n  if (isLoggedIn) {\n    toast.success(`Welcome, ${name}`);\n    return <Navigate to=\"/transactions/expenses\" />;\n  }\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <AdaptDiv>\n          <WrapperS>\n            <PlugDivs>\n              <TableDivs>{!isLoggedIn && <TotalIncome />}</TableDivs>\n              <ImgAuth src={homeimg} alt=\"Main \" />\n            </PlugDivs>\n            <WrapForm>\n              <H2>Sign Up</H2>\n              <Texts>\n                Step into a world of hassle-free expense management! Your\n                journey towards financial mastery begins here.\n              </Texts>\n              <RegisterForm />\n            </WrapForm>\n          </WrapperS>\n        </AdaptDiv>\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","handleSubmit","register","setValue","formState","errors","formErrors","useForm","showPassword","setShowPassword","useState","password","setPassword","_jsx","onSubmit","data","registerThunk","unwrap","catch","error","toast","children","_jsxs","WrapInp","StyledInput","required","minLength","value","message","type","placeholder","autoComplete","name","Err","defaultValue","email","WrapPassword","WrapInPass","StyledPasswordInput","onChange","e","newPassword","target","className","length","PasswordToggle","onClick","togglePasswordVisibility","HideIco","ShowsIco","PasswordMessage","$isGood","WrapBt","ButtonSign","Line","Link","to","Spn","Register","isLoggedIn","useSelector","selectIsLoggedIn","selectUser","success","Navigate","HelmetProvider","Helmet","AdaptDiv","WrapperS","PlugDivs","TableDivs","TotalIncome","ImgAuth","src","homeimg","alt","WrapForm","H2","Texts"],"sourceRoot":""}