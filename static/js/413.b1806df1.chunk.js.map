{"version":3,"file":"static/js/413.b1806df1.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n// import { Input } from 'antd';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  margin-top: 5px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid;\n  :hover {\n    background-color: #e0e0e0;\n  }\n`;\n\nexport const Text = styled.p`\n  /* padding: 10px 20px; */\n  margin-bottom: 15px;\n`;\nexport const RememberBox = styled.span`\n  color: rgba(250, 250, 250, 0.4);\n`;\nexport const LogIn = styled.button`\n  display: flex;\n  padding: 14px 44px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 40px;\n  border: 1px solid rgba(250, 250, 250, 0.4);\n  color: #fafafa;\n  font-family: Suisse Intl;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  text-decoration: none;\n  background: #0c0d0d;\n  &:hover {\n    border-radius: 40px;\n    border: 1px solid #0ef387;\n  }\n`;\nexport const WrapBts = styled.div`\n  margin-top: 122px;\n  @media (min-width: 768px) and (max-width: 1439.8px) {\n    margin-top: 112px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-top: 112px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { loginThunk } from 'redux/auth/operations';\n\nimport {\n  ButtonSign,\n  Err,\n  Line,\n  PasswordMessage,\n  PasswordToggle,\n  Spn,\n  StyledInput,\n  StyledPasswordInput,\n  WrapInPass,\n  WrapInp,\n  WrapPassword,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nimport { ReactComponent as ShowsIco } from '../../images/home/eye.svg';\nimport { ReactComponent as HideIco } from '../../images/home/eye-off.svg';\nimport { WrapBts } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    register,\n    setValue,\n    formState: { errors: formErrors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data))\n      .unwrap()\n      .catch(error => {\n        toast.error('Invalid email or password');\n      });\n  };\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const [password, setPassword] = useState('');\n  const isPasswordValid = () => {\n    return password.length >= 6 && !formErrors.password;\n  };\n\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    setValue('password', newPassword);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <WrapInp>\n        <div>\n          <StyledInput\n            defaultValue=\"\"\n            {...register('email', {\n              required: 'Please provide your email',\n              minLength: {\n                value: 6,\n                message: 'Ensure your email is at least 6 characters long',\n              },\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"new-email\"\n          />\n          {formErrors.email && <Err>{formErrors.email.message}</Err>}\n        </div>\n\n        <WrapPassword>\n          <WrapInPass>\n            <StyledPasswordInput\n              {...register('password', {\n                required: 'Enter a valid Password',\n                minLength: {\n                  value: 6,\n                  // message: 'Make sure your password is at least 6 characters long',\n                },\n              })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              autoComplete=\"new-password\"\n              // hasError={!!formErrors.password}\n              onChange={handlePasswordChange}\n              // isGood={password.length >= 6}\n              className={`${\n                password.length === 0\n                  ? 'empty'\n                  : isPasswordValid()\n                  ? 'valid'\n                  : 'invalid'\n              }`}\n            />\n            <PasswordToggle onClick={togglePasswordVisibility} type=\"button\">\n              {showPassword ? <HideIco /> : <ShowsIco />}\n            </PasswordToggle>\n          </WrapInPass>\n          {formErrors.password && password.length === 0 && (\n            <Err>{formErrors.password.message}</Err>\n          )}\n          {password.length > 0 && (\n            <PasswordMessage $isGood={password.length >= 6}>\n              {password.length >= 6 ? 'Good password' : 'Short password'}\n            </PasswordMessage>\n          )}\n        </WrapPassword>\n\n        <WrapBts>\n          <ButtonSign>Sign In</ButtonSign>\n        </WrapBts>\n\n        <Line>\n          <p>New here?</p>\n          <Link to={'/register'}>\n            <Spn>Create an account</Spn>{' '}\n          </Link>\n        </Line>\n      </WrapInp>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport { TotalIncome } from 'shared/Total';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nimport { AdaptDiv, H2 } from 'pages/Home/Home.styled';\nimport {\n  PlugDivs,\n  TableDivs,\n  Texts,\n  WrapForm,\n  WrapperS,\n} from 'pages/Register/Register.styled';\nimport { ImgAuth } from 'components/RegisterForm/RegisterForm.styled';\n\nimport homeimg from '../../images/home/Rectangle 1x.png';\nimport { Navigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { selectUser } from 'redux/user/selectors';\n\nexport default function Login() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const { name } = useSelector(selectUser);\n\n  if (isLoggedIn) {\n    toast.success(`Welcome, ${name}`);\n    return <Navigate to=\"/transactions/expenses\" />;\n  }\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Sign in</title>\n        </Helmet>\n        <AdaptDiv>\n          <WrapperS>\n            <PlugDivs>\n              <TableDivs>{!isLoggedIn && <TotalIncome />}</TableDivs>\n              <ImgAuth src={homeimg} alt=\"Main \" />\n            </PlugDivs>\n            <WrapForm>\n              <H2>Sign In</H2>\n              <Texts>\n                Step into a world of hassle-free expense management! Your\n                journey towards financial mastery begins here.\n              </Texts>\n              <LoginForm />\n            </WrapForm>\n          </WrapperS>\n        </AdaptDiv>\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["styled","form","input","button","p","span","WrapBts","div","LoginForm","dispatch","useDispatch","handleSubmit","register","setValue","formState","errors","formErrors","useForm","showPassword","setShowPassword","useState","password","setPassword","_jsx","onSubmit","data","loginThunk","unwrap","catch","error","toast","children","_jsxs","WrapInp","StyledInput","defaultValue","required","minLength","value","message","type","placeholder","autoComplete","email","Err","WrapPassword","WrapInPass","StyledPasswordInput","onChange","e","newPassword","target","className","length","PasswordToggle","onClick","togglePasswordVisibility","HideIco","ShowsIco","PasswordMessage","$isGood","ButtonSign","Line","Link","to","Spn","Login","isLoggedIn","useSelector","selectIsLoggedIn","name","selectUser","success","Navigate","HelmetProvider","Helmet","AdaptDiv","WrapperS","PlugDivs","TableDivs","TotalIncome","ImgAuth","src","homeimg","alt","WrapForm","H2","Texts"],"sourceRoot":""}