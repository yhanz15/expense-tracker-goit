{"version":3,"file":"static/js/847.53f41bf1.chunk.js","mappings":"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","sources":["components/doughnut/Doughnut.styled.js","components/doughnut/Doughnut.jsx","pages/MainTransactionsPage/MainTransactionsPage.styled.js","pages/MainTransactionsPage/MainTransactionsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 335px;\n  height: 471px;\n  padding: 28px 22px 0 21px;\n  border-radius: 30px;\n  background: #171719;\n  color: rgba(250, 250, 250, 0.5);\n\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    width: 704px;\n    height: 302px;\n    display: flex;\n    flex-direction: column;\n    gap: 37px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n    height: 302px;\n    display: flex;\n    flex-direction: column;\n    gap: 37px;\n    padding: 40px 40px 0 40px;\n  }\n`;\n\nexport const TitleStyled = styled.p`\n  margin-bottom: 55px;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  @media only screen and (min-width: 768px) {\n    color: rgba(250, 250, 250, 0.5);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    flex-direction: row;\n  }\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 40px;\n  }\n`;\n\nexport const DoughnutWrapper = styled.div`\n  width: 292px;\n  height: 142px;\n`;\n\nexport const ListWrapper = styled.div`\n  width: 292px;\n  max-height: 126px;\n\n  overflow-x: hidden;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  scrollbar-color: #444446 #0c0d0d;\n\n  & ::-webkit-scrollbar-thumb {\n    width: 6px;\n    height: 64px;\n    border-radius: 12px;\n    background-color: #0c0d0d;\n  }\n  & ::-webkit-scrollbar-track {\n    width: 6px;\n    height: 126px;\n    border-radius: 12px;\n    background-color: #444446;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 217px;\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  width: 230px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 14px;\n  list-style-type: none;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const ItemStyled = styled.li`\n  width: 269px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding-left: 8px;\n\n  & ::before {\n    content: 'â€¢';\n    color: ${props => props.color || 'black'};\n    font-size: 30px;\n    position: absolute;\n    top: -10px;\n    left: -10px;\n  }\n\n  & p {\n    color: rgba(250, 250, 250, 0.5);\n    font-family: Suisse Intl;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n\n  & p:last-child {\n    margin-right: 20px;\n    margin-left: auto;\n    color: #fafafa;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    width: 269px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 191px;\n  }\n`;\n\nexport const StatisticsPlug = styled.p`\n  font-size: 16px;\n  margin-top: 140px;\n  text-align: center;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-top: 40px;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n\nimport randomColor from 'randomcolor';\n\nimport { selectTransaction } from 'redux/transactions/selectors';\n\nimport {\n  DoughnutWrapper,\n  ItemStyled,\n  ListStyled,\n  ListWrapper,\n  MainWrapper,\n  StatisticsPlug,\n  Wrapper,\n} from './Doughnut.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughnutComponent = () => {\n  const listRef = useRef(null);\n\n  const queryTransactions = useSelector(selectTransaction);\n  const dispatch = useDispatch();\n\n  const [allSums, setAllSums] = useState(0);\n  const [items, setItems] = useState(null);\n\n  const data = () => {\n    const newData = items?.map(item => item.sum);\n    const segmentColors = items?.map(() => randomColor());\n    return {\n      labels: [],\n      datasets: [\n        {\n          data: newData,\n          backgroundColor: segmentColors,\n          borderWidth: 0,\n        },\n      ],\n    };\n  };\n\n  useEffect(() => {\n    getCategoryesTransactions(queryTransactions);\n  }, [dispatch, queryTransactions]);\n\n  const chartOptions = {\n    hoverOffset: [20],\n    rotation: [-90],\n    circumference: [180],\n    maintainAspectRatio: false,\n    width: [280],\n    height: [140],\n  };\n\n  function getCategoryesTransactions(transactions) {\n    if (transactions) {\n      const categorySums = {};\n      transactions.forEach(item => {\n        const categoryName = item.category?.categoryName;\n        if (categoryName) {\n          if (categorySums[categoryName]) {\n            categorySums[categoryName] += item.sum;\n          } else {\n            categorySums[categoryName] = item.sum;\n          }\n        }\n        const totalSum = transactions.reduce((acc, item) => acc + item.sum, 0);\n        const newItems = Object.keys(categorySums).map(categoryName => ({\n          category: { categoryName },\n          sum: categorySums[categoryName],\n          percentage: ((categorySums[categoryName] / totalSum) * 100).toFixed(\n            2\n          ),\n        }));\n        setItems(newItems);\n        setAllSums(totalSum);\n      });\n    }\n  }\n\n  const handleChartHover = elements => {\n    if (elements.length > 0) {\n      const clickedElement = elements[0];\n      const index = clickedElement.index;\n\n      if (listRef.current) {\n        const listItem = listRef.current.querySelector(`[data-id=\"${index}\"]`);\n\n        if (listItem) {\n          listItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n        }\n      }\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h2>Expenses categories</h2>\n      {!items?.length && (\n        <StatisticsPlug>\n          Add at least 1 expense to see \"doughnut\" chart hereðŸ“Š\n        </StatisticsPlug>\n      )}\n      <MainWrapper>\n        <DoughnutWrapper>\n          <Doughnut\n            data={data()}\n            options={{\n              ...chartOptions,\n              onHover: (_, elements) => handleChartHover(elements),\n            }}\n          />\n        </DoughnutWrapper>\n        <ListWrapper ref={listRef}>\n          <ListStyled>\n            {items?.map((transaction, index) => (\n              <ItemStyled\n                data-id={index}\n                key={index}\n                color={data().datasets[0]?.backgroundColor[index]}\n              >\n                <p>{transaction.category?.categoryName}</p>\n                <p>{`${((transaction.sum / allSums) * 100).toFixed(2)}%`}</p>\n              </ItemStyled>\n            ))}\n          </ListStyled>\n        </ListWrapper>\n      </MainWrapper>\n    </Wrapper>\n  );\n};\n\nexport default DoughnutComponent;\n","import styled from 'styled-components';\n\n// section\nexport const StyledSection = styled.section`\n  width: 375px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 80px;\n  margin-right: auto;\n  margin-left: auto;\n\n  margin-top: 66px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-bottom: 80px;\n    margin-top: 59px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 100px;\n    padding-right: 100px;\n    padding-bottom: 50px;\n\n    display: flex;\n    gap: 44px;\n    margin-top: 59px;\n  }\n`;\n\n// headers\nexport const StyledHeadersWrapper = styled.div`\n  width: 335px;\n  margin-bottom: 40px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 500px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n  }\n`;\n\nexport const StyledHeaders = styled.h1`\n  margin-bottom: 20px;\n\n  color: #fafafa;\n  font-weight: 400;\n  font-size: 32px;\n  letter-spacing: -0.02em;\n  line-height: normal;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 15px;\n\n    font-size: 38px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  color: rgba(250, 250, 250, 0.4);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.02em;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 570px;\n  }\n`;\n\n// total expense & income\n\nexport const StyledTotalUl = styled.ul`\n  width: 335px;\n  padding: 0;\n\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n\n  list-style: none;\n\n  margin-bottom: 40px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 701px;\n\n    flex-direction: row;\n\n    gap: 0;\n    justify-content: space-between;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n\n    gap: 24px;\n    flex-direction: row;\n  }\n`;\n\nexport const StyledMain = styled.main`\n  width: 630px;\n  width: 335px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n\n    gap: 0px;\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  width: 630px;\n`;\n","// base\nimport React, { useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\n// selectors\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors.js';\n\n// components\nimport { TotalIncome, TotalExpense } from 'shared/Total';\nimport OperationForm from 'shared/OperationForm/OperationForm';\nimport DoughnutComponent from 'components/doughnut/Doughnut';\n\n// styled\nimport {\n  StyledHeaders,\n  StyledSection,\n  StyledText,\n  StyledHeadersWrapper,\n  StyledTotalUl,\n  StyledMain,\n  StyledWrapper,\n} from './MainTransactionsPage.styled';\n\n// thunk's\nimport { getTransactionsThunk } from 'redux/transactions/operations';\nimport { Navigate } from 'react-router-dom';\nimport { FramerMotion } from 'helpers/framer-motion';\n\nconst MainTransactionsPage = () => {\n  // adaptive design\n  const isNotDesktop = useMediaQuery({ query: '(max-width: 1439.98px' });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1440px)' });\n\n  // dispatch to get all transactions\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getTransactionsThunk({ type: 'expenses', date: '' }));\n    }\n  }, [dispatch, isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <StyledSection>\n      {isNotDesktop && (\n        <>\n          <FramerMotion $variant=\"mainTransactionsHeaderNotDesktop\">\n            <StyledHeadersWrapper>\n              <StyledHeaders>Expense log</StyledHeaders>\n              <StyledText>\n                Capture and organize every penny spent with ease! A clear view\n                of your financial habits at your fingertips.\n              </StyledText>\n            </StyledHeadersWrapper>\n          </FramerMotion>\n          <FramerMotion $variant=\"mainTransactionsListNotDesktop\">\n            <StyledTotalUl>\n              <li>\n                <TotalIncome />\n              </li>\n              <li>\n                <TotalExpense />\n              </li>\n            </StyledTotalUl>\n          </FramerMotion>\n          <FramerMotion $variant=\"operationForm\">\n            <OperationForm editData={null}/>\n          </FramerMotion>\n          <FramerMotion $variant=\"doughnut\">\n            <StyledMain>\n              <DoughnutComponent />\n            </StyledMain>\n          </FramerMotion>\n        </>\n      )}\n      {isDesktop && (\n        <>\n          <FramerMotion $variant=\"mainTransactionsInfoDesktop\">\n            <StyledWrapper>\n              <StyledHeadersWrapper>\n                <StyledHeaders>Expense log</StyledHeaders>\n                <StyledText>\n                  Capture and organize every penny spent with ease! A clear view\n                  of your financial habits at your fingertips.\n                </StyledText>\n              </StyledHeadersWrapper>\n              <StyledTotalUl>\n                <li>\n                  <TotalIncome />\n                </li>\n                <li>\n                  <TotalExpense />\n                </li>\n              </StyledTotalUl>\n              <StyledMain>\n                <DoughnutComponent />\n              </StyledMain>\n            </StyledWrapper>\n          </FramerMotion>\n          <FramerMotion $variant=\"operationForm\">\n            <OperationForm />\n          </FramerMotion>\n        </>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default MainTransactionsPage;\n"],"names":["Wrapper","styled","div","MainWrapper","p","DoughnutWrapper","ListWrapper","ListStyled","ul","ItemStyled","li","props","color","StatisticsPlug","ChartJS","register","ArcElement","Tooltip","Legend","DoughnutComponent","listRef","useRef","queryTransactions","useSelector","selectTransaction","dispatch","useDispatch","allSums","setAllSums","useState","items","setItems","data","labels","datasets","map","item","sum","backgroundColor","randomColor","borderWidth","useEffect","transactions","categorySums","forEach","_item$category","categoryName","category","totalSum","reduce","acc","newItems","Object","keys","percentage","toFixed","getCategoryesTransactions","_jsxs","children","_jsx","length","Doughnut","options","hoverOffset","rotation","circumference","maintainAspectRatio","width","height","onHover","_","elements","index","current","listItem","querySelector","scrollIntoView","behavior","block","inline","handleChartHover","ref","transaction","_data$datasets$","_transaction$category","StyledSection","section","StyledHeadersWrapper","StyledHeaders","h1","StyledText","StyledTotalUl","StyledMain","main","StyledWrapper","MainTransactionsPage","isNotDesktop","useMediaQuery","query","isDesktop","isLoggedIn","selectIsLoggedIn","getTransactionsThunk","type","date","_Fragment","FramerMotion","$variant","TotalIncome","TotalExpense","OperationForm","editData","Navigate","to"],"sourceRoot":""}